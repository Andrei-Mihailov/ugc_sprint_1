version: '3'
services:
  ugc-api:
    build:
      context: .
      dockerfile: Dockerfile-ugc-api
    container_name: ugc-api
    environment:
      - WORKERS=1
      - PORT_APP=5000
    depends_on:
      - kafka
    ports:
      - "127.0.0.1:5000:5000"
  
  kafka:
    image: bitnami/kafka:3.7
    container_name: ugc-kafka
    ports:
      - "9094:9094"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=0
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_DELETE_TOPIC_ENABLE=true
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_KRAFT_CLUSTER_ID=NzuVY3xIRF2x-SG4uzn4SQ
    volumes:
      - kafka_data:/bitnami/kafka
  
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: ugc-kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_NAME=kraft
    
volumes:
  kafka_data: